<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mysite.dao.ContentDao">

    <resultMap id="ContentMap" type="com.mysite.model.entity.Content">
        <id column="cid" jdbcType="INTEGER" property="cid"/>
        <result column="title" jdbcType="VARCHAR" property="title"/>
        <result column="slug" jdbcType="VARCHAR" property="slug"/>
        <result column="created" jdbcType="INTEGER" property="created"/>
        <result column="modified" jdbcType="INTEGER" property="modified"/>
        <result column="author_id" jdbcType="INTEGER" property="authorId"/>
        <result column="type" jdbcType="VARCHAR" property="type"/>
        <result column="status" jdbcType="VARCHAR" property="status"/>
        <result column="tags" jdbcType="VARCHAR" property="tags"/>
        <result column="categories" jdbcType="VARCHAR" property="categories"/>
        <result column="hits" jdbcType="INTEGER" property="hits"/>
        <result column="comments_num" jdbcType="INTEGER" property="commentsNum"/>
        <result column="allow_comment" jdbcType="BIT" property="allowComment"/>
        <result column="allow_ping" jdbcType="BIT" property="allowPing"/>
        <result column="allow_feed" jdbcType="BIT" property="allowFeed"/>
    </resultMap>

    <resultMap id="ArchiveDtoMap" type="com.mysite.model.dto.ArchiveDto">
        <id column="date" property="date"/>
        <result column="count" property="count"/>
    </resultMap>

    <sql id="BASE_TABLE">
      t_contents
    </sql>

    <!-- 用户表 -->
    <sql id="TABLE_USER">
        <include refid="com.mysite.dao.UserDao.BASE_TABLE"/>
    </sql>

    <!-- 文章的基本列 -->
    <sql id="BASE_COLUMN">
        c.cid, c.title, c.title_pic, c.slug, c.created, c.modified, c.content, c.author_id,
        c.type, c.status, c.tags, c.categories, c.hits, c.comments_num, c.allow_comment,
        c.allow_ping, c.allow_feed
    </sql>

    <!-- 关联查询的用户表需要的字段 -->
    <sql id="REL_USER_COLUMN">
        u.username,
    </sql>

    <!-- 添加文章 -->
    <insert id="addArticle" parameterType="com.mysite.model.entity.Content" useGeneratedKeys="true" keyProperty="cid">
        INSERT INTO
        <include refid="BASE_TABLE"/>
        <trim prefix="(" suffix=")" suffixOverrides=",">
            title, title_pic, slug, created, content, author_id,
            type, status, tags, categories, hits, comments_num, allow_comment,
            allow_ping, allow_feed,
        </trim>
        <trim prefix="VALUES(" suffix=")" suffixOverrides=",">
            #{title, jdbcType=VARCHAR}, #{titlePic, jdbcType=VARCHAR}, #{slug, jdbcType=VARCHAR}, UNIX_TIMESTAMP(NOW()),
            #{content, jdbcType=LONGVARCHAR}, #{authorId, jdbcType=INTEGER},
            #{type, jdbcType=VARCHAR}, #{status, jdbcType=VARCHAR}, #{tags, jdbcType=VARCHAR},
            #{categories, jdbcType=VARCHAR}, #{hits, jdbcType=INTEGER}, #{commentsNum, jdbcType=INTEGER},
            #{allowComment, jdbcType=INTEGER}, #{allowPing, jdbcType=INTEGER}, #{allowFeed, jdbcType=INTEGER},
        </trim>
    </insert>

    <!-- 删除文章 -->
    <delete id="deleteArticleById">
        DELETE FROM
        <include refid="BASE_TABLE"/>
        WHERE cid = #{cid, jdbcType=INTEGER}
    </delete>

    <!-- 更新文章信息 -->
    <update id="updateArticleById" parameterType="com.mysite.model.entity.Content">
        UPDATE
        <include refid="BASE_TABLE"/>
        <set>
            <if test="title != null">
                title = #{title, jdbcType=VARCHAR},
            </if>
            <if test="titlePic != null">
                title_pic = #{titlePic, jdbcType=VARCHAR},
            </if>
            <if test="slug != null">
                slug = #{slug, jdbcType=VARCHAR},
            </if>
            <if test="content != null">
                content = #{content, jdbcType=LONGVARCHAR},
            </if>
            modified = UNIX_TIMESTAMP(NOW()),
            <if test="type != null">
                type = #{type, jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status, jdbcType=VARCHAR},
            </if>
            <if test="tags != null">
                tags = #{tags, jdbcType=VARCHAR},
            </if>
            <if test="categories != null">
                categories = #{categories, jdbcType=VARCHAR},
            </if>
            <if test="hits != null">
                hits = #{hits, jdbcType=INTEGER},
            </if>
            <if test="commentsNum != null">
                comments_num = #{commentsNum, jdbcType=INTEGER},
            </if>
            <if test="allowComment != null">
                allow_comment = #{allowComment, jdbcType=INTEGER},
            </if>
            <if test="allowPing != null">
                allow_ping = #{allowPing, jdbcType=INTEGER},
            </if>
            <if test="allowFeed != null">
                allow_feed = #{allowFeed, jdbcType=INTEGER},
            </if>
        </set>
        WHERE cid = #{cid, jdbcType=INTEGER}
    </update>

    <update id="updateArticleCommentCountById">
        UPDATE
        <include refid="BASE_TABLE"/>
        SET comments_num = #{commentsNum, jdbcType=INTEGER}
        WHERE cid = #{cid, jdbcType=INTEGER}
    </update>


    <!-- 根据主键编号获取文章信息 -->
    <select id="getArticleById" resultMap="ContentMap">
        SELECT
        <include refid="BASE_COLUMN"/>
        FROM
        <include refid="BASE_TABLE"/>
        AS c
        WHERE c.cid = #{cid, jdbcType=INTEGER}
    </select>

    <!-- 根据条件查询文章 -->
    <select id="getArticlesByCond" resultMap="ContentMap" parameterType="com.mysite.model.dto.cond.ContentCond">
        SELECT
        <include refid="BASE_COLUMN"/>
        FROM
        <include refid="BASE_TABLE"/>
        AS c
        <where>
            <if test="tag != null">
                AND c.tags LIKE CONCAT('%',#{tag, jdbcType=VARCHAR},'%')
            </if>
            <if test="category != null">
                AND c.categories LIKE CONCAT('%',#{category, jdbcType=VARCHAR},'%')
            </if>
            <if test="status != null">
                AND c.status = #{status, jdbcType=VARCHAR}
            </if>
            <if test="title != null">
                AND c.title LIKE CONCAT('%',#{title, jdbcType=VARCHAR},'%')
            </if>
            <if test="content != null">
                AND c.content LIKE CONCAT('%',#{content, jdbcType=VARCHAR},'%')
            </if>
            <if test="type != null">
                AND c.type = #{type, jdbcType=VARCHAR}
            </if>
            <if test="startTime != null">
                AND c.created &gt;= #{startTime, jdbcType=INTEGER}
            </if>
            <if test="endTime != null">
                AND c.created &lt;= #{endTime, jdbcType=INTEGER}
            </if>
        </where>
        ORDER BY c.created DESC
    </select>

    <select id="getArticleCount" resultType="java.lang.Long">
        SELECT count(*)
        FROM
        <include refid="BASE_TABLE"/>
    </select>


    <select id="getArchive" resultMap="ArchiveDtoMap"
            parameterType="com.mysite.model.dto.cond.ContentCond">
        select
        FROM_UNIXTIME(created, '%Y年%m月') as date,
        count(*) as count
        from
        <include refid="BASE_TABLE"/>
        <where>
            type = 'post'
            and status = 'publish'
            <if test="startTime != null">
                AND created &gt;= #{startTime, jdbcType=INTEGER}
            </if>
            <if test="endTime != null">
                AND created &lt;= #{endTime, jdbcType=INTEGER}
            </if>
        </where>
        group by date
        order by date desc
    </select>

    <select id="getRecentlyArticle" resultMap="ContentMap">
        SELECT
        cid, title
        FROM
        <include refid="BASE_TABLE"/>
        ORDER BY created DESC
    </select>

    <!-- 模糊搜索 -->
    <select id="searchArticle" resultMap="ContentMap">
        SELECT
        <include refid="BASE_COLUMN"/>
        FROM
        <include refid="BASE_TABLE"/>
        AS c
        <where>
            c.title LIKE CONCAT('%',#{param, jdbcType=VARCHAR},'%')
            OR
            c.content LIKE CONCAT('%',#{param, jdbcType=VARCHAR},'%')
        </where>
    </select>


</mapper>